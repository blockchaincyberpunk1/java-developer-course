Control Flow and Decision Making
Objective: To practice control structures and decision-making in Java.

Task: In this assignment, you will work on a set of programming problems that require using control structures such as if-else statements, switch statements, and loops (e.g., for, while) to solve. These problems will test your ability to make decisions in your programs and implement iterative tasks effectively.

Instructions:

Problem Selection: Choose three programming problems from the list provided below. Each problem involves different aspects of control flow and decision-making.

Problem 1: Calculate the factorial of a given positive integer using a loop.
Problem 2: Determine if a number is prime or not using control structures.
Problem 3: Write a program to find the largest element in an array of integers.
Problem 4: Implement a simple calculator program that performs basic arithmetic operations.
Problem 5: Create a program that simulates a guessing game where the user needs to guess a randomly generated number.
Implementation: Write Java programs to solve the selected problems. Ensure that your programs use the appropriate control structures (if-else, switch, loops) as required by the problem.

Testing: Test your programs with various inputs to ensure they produce the correct results and handle different scenarios correctly.

Documentation: Provide comments and documentation in your code to explain the logic and steps you followed to solve each problem.

Submission: Submit the source code files (.java) for all three problems along with a brief explanation of each problem, your approach to solving it, and the output generated by your programs.

Evaluation Criteria:

Your assignment will be evaluated based on the following criteria:

Problem Selection: The chosen problems should be appropriate for practicing control flow and decision-making.

Implementation: Your Java programs should effectively solve the selected problems using if-else statements, switch statements, and loops where necessary.

Correctness: The programs should produce correct results for a variety of test cases and handle different scenarios appropriately.

Code Quality: The code should be well-structured, follow Java naming conventions, and include comments and documentation.

Problem Documentation: You should provide a clear explanation of each problem, your approach to solving it, and the expected output.

Submission: The assignment should be submitted with all required source code files and explanations.